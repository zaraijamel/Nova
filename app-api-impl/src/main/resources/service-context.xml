<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:jpa="http://www.springframework.org/schema/data/jpa"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/data/jpa http://www.springframework.org/schema/data/jpa/spring-jpa-1.0.xsd">

    <import resource="datasource-context.xml"/>

    <import resource="scheduler-context.xml"/>

    <import resource="security-context.xml"/>

    <context:annotation-config/>

    <jpa:repositories base-package="name.oleg.service"/>

    <context:component-scan base-package="name.oleg.service"/>
    <context:component-scan base-package="name.oleg.mapper"/>
    <context:component-scan base-package="name.oleg.parser"/>
    <context:component-scan base-package="name.oleg.resume"/>
    <context:component-scan base-package="name.oleg.mail"/>

    <bean id="linkedInApiOAuthFactory" class="com.google.code.linkedinapi.client.oauth.LinkedInOAuthServiceFactory"
          factory-method="getInstance"/>
    <bean id="linkedInOAuthService" factory-bean="linkedInApiOAuthFactory" factory-method="createLinkedInOAuthService">
        <constructor-arg value="77hnk6zqvjt474"/>
        <constructor-arg value="1t4aOLkm4EoGgWVE"/>
    </bean>

    <bean id="linkedInApiClientFactory" class="com.google.code.linkedinapi.client.LinkedInApiClientFactory"
          factory-method="newInstance">
        <constructor-arg value="77hnk6zqvjt474"/>
        <constructor-arg value="1t4aOLkm4EoGgWVE"/>
    </bean>

</beans>